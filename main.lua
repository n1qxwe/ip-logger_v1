do local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26=0;local v27;while true do if (v26==1) then return v5(v27);end if (v26==0) then v27={};for v44=1, #v24 do v6(v27,v0(v4(v1(v2(v24,v44,v44 + 1 )),v1(v2(v25,1 + ((v44-1)% #v25) ,1 + ((v44-1)% #v25) + 1 )))%256 ));end v26=1;end end end local v8=tonumber;local v9=string[v7("\195\91\38\211","\161\34\82\182\224")];local v10=string[v7("\235\5\88\236","\136\109\57\158\187")];local v11=string[v7("\145\109\243","\226\24\145\94\95\153")];local v12=string[v7("\176\238\216\22","\215\157\173\116\181\46")];local v13=string[v7("\200\48\164","\186\85\212\235\146")];local v14=table[v7("\91\205\143\21\255\45","\56\162\225\118\158\89\142")];local v15=table[v7("\209\82\22\197\189\54","\184\60\101\160\207\66")];local v16=math[v7("\176\53\135\100\172","\220\81\226\28")];local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table[v7("\210\29\197\131\248\225","\167\115\181\226\155\138")] ;local v22=tonumber;local function v23(v28,v29,...)local v30=0;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;local v42;local v43;while true do if (v30==1) then v35=nil;v36=nil;v37=nil;v38=nil;v30=2;end if (2==v30) then v39=nil;v40=nil;v41=nil;v42=nil;v30=3;end if (v30==0) then v31=0;v32=nil;v33=nil;v34=nil;v30=1;end if (v30==3) then v43=nil;while true do local v45=0;while true do if (2==v45) then if (6==v31) then local v46=0;while true do if (v46==1) then v43=nil;v31=7;break;end if (v46==0) then v42=nil;function v42()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v54==1) then v57=nil;v58=nil;v54=2;end if (v54==3) then v61=nil;while true do local v107=0;while true do if (v107==0) then if (v55==1) then local v132=0;while true do if (v132==0) then v59={v56,v57,nil,v58};v60=v37();v132=1;end if (v132==1) then v61={};v55=2;break;end end end if (v55==0) then local v133=0;while true do if (v133==1) then v58={};v55=1;break;end if (v133==0) then v56={};v57={};v133=1;end end end v107=1;end if (v107==1) then if (v55==3) then local v134=0;while true do if (0==v134) then for v146=1,v37() do v57[v146-(860 -(814 + 45)) ]=v42();end return v59;end end end if (v55==2) then local v135=0;while true do if (1==v135) then for v148=1,v37() do local v149=0;local v150;local v151;while true do if (v149==1) then while true do if (0==v150) then v151=v35();if (v34(v151,1,1)==0) then local v159=0;local v160;local v161;local v162;while true do if (v159==3) then if (v34(v161,3,3)==1) then v162[4]=v61[v162[4]];end v56[v148]=v162;break;end if (v159==1) then v162={v36(),v36(),nil,nil};if (v160==0) then local v339=0;while true do if (v339==0) then v162[3]=v36();v162[4]=v36();break;end end elseif (v160==1) then v162[3]=v37();elseif (v160==(8 -6)) then v162[3]=v37() -(2^16) ;elseif (v160==(2 + 1)) then local v456=0;local v457;while true do if (v456==0) then v457=0;while true do if (v457==0) then v162[3]=v37() -(2^16) ;v162[4]=v36();break;end end break;end end end v159=2;end if (v159==0) then v160=v34(v151,2,3);v161=v34(v151,1142 -(116 + 1022) ,6);v159=1;end if (v159==2) then if (v34(v161,1,3 -2 )==1) then v162[2]=v61[v162[2 + 0 ]];end if (v34(v161,7 -5 ,2)==1) then v162[3]=v61[v162[3]];end v159=3;end end end break;end end break;end if (0==v149) then v150=0;v151=nil;v149=1;end end end v55=3;break;end if (v135==0) then for v152=1 + 0 ,v60 do local v153=0;local v154;local v155;local v156;while true do if (v153==0) then v154=0;v155=nil;v153=1;end if (1==v153) then v156=nil;while true do if (v154==0) then local v157=0;while true do if (v157==0) then v155=v35();v156=nil;v157=1;end if (1==v157) then v154=1;break;end end end if (v154==1) then if (v155==1) then v156=v35()~=(0 + 0) ;elseif (v155==(879 -(282 + 595))) then v156=v38();elseif (v155==(1640 -(1523 + 114))) then v156=v39();end v61[v152]=v156;break;end end break;end end end v59[3]=v35();v135=1;end end end break;end end end break;end if (v54==2) then v59=nil;v60=nil;v54=3;end if (v54==0) then v55=0;v56=nil;v54=1;end end end v46=1;end end end if (v31==3) then local v47=0;while true do if (v47==1) then v38=nil;v31=4;break;end if (v47==0) then v37=nil;function v37()local v62=0;local v63;local v64;local v65;local v66;while true do if (0==v62) then v63,v64,v65,v66=v9(v28,v32,v32 + ((13 -6) -4) );v32=v32 + ((688 -(30 + 35)) -(382 + 173 + 64)) ;v62=1;end if (1==v62) then return (v66 * 16777216) + (v65 * (66467 -(857 + (1331 -(1043 + 214))))) + (v64 * (967 -711)) + v63 ;end end end v47=1;end end end v45=3;end if (v45==3) then if (v31==4) then local v48=0;while true do if (v48==1) then function v39(v67)local v68=0;local v69;local v70;while true do if (2==v68) then v70={};for v108=1, #v69 do v70[v108]=v10(v9(v11(v69,v108,v108)));end v68=3;end if (v68==3) then return v14(v70);end if (v68==0) then v69=nil;if  not v67 then local v126=0;local v127;while true do if (v126==0) then v127=0;while true do if (v127==0) then v67=v37();if (v67==0) then return "";end break;end end break;end end end v68=1;end if (v68==1) then v69=v11(v28,v32,(v32 + v67) -((1161 + 326) -(998 + (614 -(116 + 10)))) );v32=v32 + v67 ;v68=2;end end end v31=5;break;end if (v48==0) then function v38()local v71=0;local v72;local v73;local v74;local v75;local v76;local v77;while true do if (0==v71) then v72=v37();v73=v37();v71=1;end if (v71==2) then v76=v34(v73,21,31);v77=((v34(v73,(1180 -(361 + 219)) -(367 + (521 -(53 + 267))) )==1) and  -(1 + 0)) or (928 -(214 + 713)) ;v71=3;end if (v71==1) then v74=1;v75=(v34(v73,1,20) * ((1214 -(323 + 889))^(470 -((389 -244) + 293)))) + v72 ;v71=2;end if (v71==3) then if (v76==0) then if (v75==(413 -(15 + 398))) then return v77 * (982 -(18 + 964)) ;else local v128=0;while true do if (v128==0) then v76=1;v74=0 -0 ;break;end end end elseif (v76==2047) then return ((v75==((249 + 181) -(44 + 244 + 142))) and (v77 * (1/0))) or (v77 * NaN) ;end return v16(v77,v76-1023 ) * (v74 + (v75/(2^(902 -(20 + 830))))) ;end end end v39=nil;v48=1;end end end if (1==v31) then local v49=0;while true do if (v49==0) then v34=nil;function v34(v78,v79,v80)if v80 then local v95=0;local v96;while true do if (0==v95) then v96=(v78/(((1 + 2) -(739 -(542 + 196)))^(v79-1)))%((3 -1)^(((v80-1) -(v79-(2 -1))) + 1 + 0)) ;return v96-(v96%1) ;end end else local v97=0;local v98;while true do if (v97==0) then v98=(2 + 0)^(v79-1) ;return (((v78%(v98 + v98))>=v98) and (1 + 0)) or (0 -0) ;end end end end v49=1;end if (v49==1) then v35=nil;v31=2;break;end end end break;end if (v45==0) then if (v31==7) then local v50=0;while true do if (v50==0) then function v43(v81,v82,v83)local v84=0;local v85;local v86;local v87;while true do if (1==v84) then v87=v81[3];return function(...)local v110=0;local v111;local v112;local v113;local v114;local v115;local v116;local v117;local v118;local v119;local v120;local v121;local v122;local v123;local v124;while true do if (1==v110) then v115=1 + 0 ;v116= -1;v117={};v118={...};v110=2;end if (v110==0) then v111=v85;v112=v86;v113=v87;v114=v41;v110=1;end if (3==v110) then v122=(v119-v113) + 1 ;v123=nil;v124=nil;while true do local v129=0;while true do if (v129==0) then v123=v111[v115];v124=v123[1 -0 ];v129=1;end if (v129==1) then if (v124<=(1102 -(68 + 997))) then if (v124<=(7 + 11)) then if (v124<=8) then if (v124<=3) then if (v124<=1) then if (v124==0) then local v163=0;local v164;local v165;while true do if (v163==1) then while true do if (v164==0) then v165=v123[2];v121[v165]=v121[v165](v21(v121,v165 + 1 ,v123[3]));break;end end break;end if (v163==0) then v164=0;v165=nil;v163=1;end end else for v284=v123[2],v123[3] do v121[v284]=nil;end end elseif (v124==2) then v121[v123[2]]=v123[3];else v121[v123[2]][v123[3]]=v123[889 -(261 + 624) ];end elseif (v124<=5) then if (v124>4) then v121[v123[2]]=v121[v123[3]] + v123[4] ;else v121[v123[2]]= #v121[v123[1273 -(226 + 1044) ]];end elseif (v124<=(26 -20)) then local v172=0;local v173;local v174;local v175;local v176;local v177;while true do if (v172==0) then v173=0;v174=nil;v172=1;end if (v172==2) then v177=nil;while true do if (v173==1) then local v381=0;while true do if (v381==1) then v173=2;break;end if (v381==0) then v116=(v176 + v174) -1 ;v177=0;v381=1;end end end if (v173==2) then for v431=v174,v116 do local v432=0;local v433;while true do if (v432==0) then v433=0;while true do if (0==v433) then v177=v177 + 1 ;v121[v431]=v175[v177];break;end end break;end end end break;end if (0==v173) then local v382=0;while true do if (v382==1) then v173=1;break;end if (v382==0) then v174=v123[2];v175,v176=v114(v121[v174](v121[v174 + 1 ]));v382=1;end end end end break;end if (v172==1) then v175=nil;v176=nil;v172=2;end end elseif (v124==7) then v121[v123[2]]=v121[v123[3]] + v123[4] ;else v121[v123[119 -(32 + 85) ]][v121[v123[3]]]=v121[v123[4]];end elseif (v124<=13) then if (v124<=10) then if (v124>9) then if  not v121[v123[2]] then v115=v115 + 1 ;else v115=v123[3];end else local v178=0;local v179;while true do if (0==v178) then v179=v123[2];v121[v179](v21(v121,v179 + 1 ,v116));break;end end end elseif (v124<=11) then v121[v123[2]]={};elseif (v124==12) then v115=v123[3];else v121[v123[2]][v121[v123[3]]]=v121[v123[4]];end elseif (v124<=(1095 -(1020 + 60))) then if (v124>14) then do return;end else v121[v123[2]]=v83[v123[3]];end elseif (v124<=16) then local v183=0;local v184;while true do if (v183==0) then v184=v123[2];do return v21(v121,v184,v116);end break;end end elseif (v124==17) then if  not v121[v123[2]] then v115=v115 + (1424 -(630 + 793)) ;else v115=v123[3];end else v121[v123[6 -4 ]]= #v121[v123[3]];end elseif (v124<=27) then if (v124<=22) then if (v124<=20) then if (v124==19) then local v185=0;local v186;local v187;local v188;while true do if (0==v185) then v186=0;v187=nil;v185=1;end if (v185==1) then v188=nil;while true do if (v186==1) then v121[v187 + 1 ]=v188;v121[v187]=v188[v123[4 + 0 ]];break;end if (v186==0) then local v386=0;while true do if (v386==0) then v187=v123[2];v188=v121[v123[3]];v386=1;end if (v386==1) then v186=1;break;end end end end break;end end else local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==2) then while true do if (v190==1) then local v387=0;while true do if (v387==0) then v193=v121[v191] + v192 ;v121[v191]=v193;v387=1;end if (v387==1) then v190=2;break;end end end if (v190==2) then if (v192>(957 -(892 + 65))) then if (v193<=v121[v191 + 1 ]) then local v477=0;while true do if (v477==0) then v115=v123[3];v121[v191 + (7 -4) ]=v193;break;end end end elseif (v193>=v121[v191 + 1 ]) then local v478=0;local v479;while true do if (v478==0) then v479=0;while true do if (v479==0) then v115=v123[2 + 1 ];v121[v191 + 3 ]=v193;break;end end break;end end end break;end if (0==v190) then local v388=0;while true do if (v388==1) then v190=1;break;end if (v388==0) then v191=v123[2];v192=v121[v191 + 1 + 1 ];v388=1;end end end end break;end if (v189==0) then v190=0;v191=nil;v189=1;end if (v189==1) then v192=nil;v193=nil;v189=2;end end end elseif (v124==21) then v121[v123[2]]();else v121[v123[6 -4 ]][v121[v123[3]]]=v123[4];end elseif (v124<=24) then if (v124>23) then local v196=0;local v197;local v198;local v199;local v200;while true do if (v196==0) then v197=0;v198=nil;v196=1;end if (v196==2) then while true do if (v197==2) then for v434=1,v123[4] do local v435=0;local v436;local v437;while true do if (v435==0) then v436=0;v437=nil;v435=1;end if (v435==1) then while true do if (1==v436) then if (v437[1914 -(1789 + 124) ]==69) then v200[v434-1 ]={v121,v437[3]};else v200[v434-1 ]={v82,v437[3]};end v120[ #v120 + 1 ]=v200;break;end if (v436==0) then local v517=0;while true do if (v517==0) then v115=v115 + (1 -0) ;v437=v111[v115];v517=1;end if (v517==1) then v436=1;break;end end end end break;end end end v121[v123[2]]=v43(v198,v199,v83);break;end if (v197==1) then local v390=0;while true do if (0==v390) then v200={};v199=v18({},{[v7("\249\221\43\233\88\126\105","\166\130\66\135\60\27\17")]=function(v480,v481)local v482=0;local v483;local v484;while true do if (v482==0) then v483=0;v484=nil;v482=1;end if (v482==1) then while true do if (v483==0) then local v537=0;while true do if (v537==0) then v484=v200[v481];return v484[1][v484[1749 -(760 + 987) ]];end end end end break;end end end,[v7("\15\123\68\203\98\57\74\78\203\109","\80\36\42\174\21")]=function(v485,v486,v487)local v488=0;local v489;local v490;while true do if (v488==0) then v489=0;v490=nil;v488=1;end if (v488==1) then while true do if (v489==0) then v490=v200[v486];v490[1][v490[2]]=v487;break;end end break;end end end});v390=1;end if (v390==1) then v197=2;break;end end end if (0==v197) then local v391=0;while true do if (v391==0) then v198=v112[v123[5 -2 ]];v199=nil;v391=1;end if (v391==1) then v197=1;break;end end end end break;end if (v196==1) then v199=nil;v200=nil;v196=2;end end elseif (v121[v123[2]]==v123[4]) then v115=v115 + 1 ;else v115=v123[3];end elseif (v124<=25) then if v121[v123[2]] then v115=v115 + 1 ;else v115=v123[3];end elseif (v124>26) then v121[v123[2]]=v121[v123[3]]%v123[4] ;else local v297=0;local v298;local v299;while true do if (v297==0) then v298=0;v299=nil;v297=1;end if (1==v297) then while true do if (0==v298) then v299=v123[2];do return v121[v299](v21(v121,v299 + (2 -1) ,v123[3]));end break;end end break;end end end elseif (v124<=32) then if (v124<=29) then if (v124>28) then v121[v123[2]]=v123[3] + v121[v123[4]] ;else local v202=0;local v203;local v204;while true do if (v202==0) then v203=v123[182 -(67 + 113) ];v204=v121[v123[11 -8 ]];v202=1;end if (v202==1) then v121[v203 + 1 ]=v204;v121[v203]=v204[v123[3 + 1 ]];break;end end end elseif (v124<=30) then v121[v123[2]]=v121[v123[3 + 0 ]]%v121[v123[1059 -(87 + 968) ]] ;elseif (v124==31) then local v300=0;local v301;local v302;while true do if (v300==0) then v301=v123[2];v302=v121[v301];v300=1;end if (v300==1) then for v392=v301 + 1 ,v123[13 -10 ] do v15(v302,v121[v392]);end break;end end else local v303=0;local v304;local v305;local v306;while true do if (v303==2) then if (v305>(0 + 0)) then if (v306<=v121[v304 + 1 ]) then local v465=0;local v466;while true do if (v465==0) then v466=0;while true do if (v466==0) then v115=v123[3];v121[v304 + 3 ]=v306;break;end end break;end end end elseif (v306>=v121[v304 + 1 ]) then local v467=0;local v468;while true do if (v467==0) then v468=0;while true do if (0==v468) then v115=v123[3];v121[v304 + 3 ]=v306;break;end end break;end end end break;end if (0==v303) then v304=v123[2];v305=v121[v304 + 2 ];v303=1;end if (v303==1) then v306=v121[v304] + v305 ;v121[v304]=v306;v303=2;end end end elseif (v124<=34) then if (v124>(74 -41)) then local v206=0;local v207;local v208;local v209;local v210;local v211;while true do if (v206==2) then v211=nil;while true do if (v207==2) then for v438=v208,v116 do local v439=0;local v440;while true do if (v439==0) then v440=0;while true do if (v440==0) then v211=v211 + (2 -1) ;v121[v438]=v209[v211];break;end end break;end end end break;end if (v207==0) then local v393=0;while true do if (v393==0) then v208=v123[2];v209,v210=v114(v121[v208](v121[v208 + 1 ]));v393=1;end if (v393==1) then v207=1;break;end end end if (v207==1) then local v394=0;while true do if (v394==1) then v207=2;break;end if (v394==0) then v116=(v210 + v208) -1 ;v211=0;v394=1;end end end end break;end if (v206==1) then v209=nil;v210=nil;v206=2;end if (v206==0) then v207=0;v208=nil;v206=1;end end else v121[v123[2]]();end elseif (v124<=(26 + 9)) then local v212=0;local v213;while true do if (v212==0) then v213=v123[2];v121[v213](v21(v121,v213 + 1 ,v116));break;end end elseif (v124==36) then local v307=0;local v308;local v309;while true do if (v307==1) then while true do if (v308==0) then v309=v123[2];v121[v309]=v121[v309](v121[v309 + 1 ]);break;end end break;end if (v307==0) then v308=0;v309=nil;v307=1;end end else local v310=0;local v311;local v312;local v313;while true do if (v310==2) then for v395=1,v123[1821 -(1703 + 114) ] do local v396=0;local v397;local v398;while true do if (v396==1) then while true do if (v397==0) then local v501=0;while true do if (1==v501) then v397=1;break;end if (v501==0) then v115=v115 + (3 -2) ;v398=v111[v115];v501=1;end end end if (v397==1) then if (v398[1]==69) then v313[v395-1 ]={v121,v398[3]};else v313[v395-1 ]={v82,v398[3]};end v120[ #v120 + 1 ]=v313;break;end end break;end if (v396==0) then v397=0;v398=nil;v396=1;end end end v121[v123[2]]=v43(v311,v312,v83);break;end if (v310==1) then v313={};v312=v18({},{[v7("\69\113\25\57\126\75\8","\26\46\112\87")]=function(v399,v400)local v401=0;local v402;local v403;while true do if (v401==0) then v402=0;v403=nil;v401=1;end if (v401==1) then while true do if (v402==0) then local v503=0;while true do if (v503==0) then v403=v313[v400];return v403[1][v403[5 -3 ]];end end end end break;end end end,[v7("\139\134\45\174\99\182\177\65\177\161","\212\217\67\203\20\223\223\37")]=function(v404,v405,v406)local v407=0;local v408;local v409;while true do if (0==v407) then v408=0;v409=nil;v407=1;end if (v407==1) then while true do if (v408==0) then v409=v313[v405];v409[1][v409[2]]=v406;break;end end break;end end end});v310=2;end if (v310==0) then v311=v112[v123[3]];v312=nil;v310=1;end end end elseif (v124<=56) then if (v124<=46) then if (v124<=(66 -25)) then if (v124<=(119 -80)) then if (v124>38) then local v214=0;local v215;local v216;while true do if (v214==1) then while true do if (0==v215) then v216=v123[954 -(802 + 150) ];v121[v216](v121[v216 + 1 ]);break;end end break;end if (v214==0) then v215=0;v216=nil;v214=1;end end else v121[v123[2]]={};end elseif (v124>40) then v121[v123[2]]=v83[v123[7 -4 ]];else v121[v123[2]]=v121[v123[3]][v123[2 + 2 ]];end elseif (v124<=43) then if (v124>42) then local v222=0;local v223;local v224;local v225;local v226;while true do if (v222==2) then while true do if (v223==0) then local v411=0;while true do if (0==v411) then v224=v123[2];v225=v121[v224];v411=1;end if (v411==1) then v223=1;break;end end end if (v223==1) then v226=v123[3];for v441=1,v226 do v225[v441]=v121[v224 + v441 ];end break;end end break;end if (v222==0) then v223=0;v224=nil;v222=1;end if (v222==1) then v225=nil;v226=nil;v222=2;end end else local v227=0;local v228;local v229;local v230;while true do if (v227==0) then v228=v123[2];v229=v121[v228];v227=1;end if (v227==1) then v230=v123[3];for v362=1,v230 do v229[v362]=v121[v228 + v362 ];end break;end end end elseif (v124<=44) then local v231=0;local v232;local v233;while true do if (v231==0) then v232=0;v233=nil;v231=1;end if (v231==1) then while true do if (v232==0) then v233=v123[2];v121[v233](v121[v233 + 1 ]);break;end end break;end end elseif (v124==45) then local v314=0;local v315;local v316;local v317;local v318;while true do if (v314==2) then for v414=v315,v116 do local v415=0;local v416;while true do if (0==v415) then v416=0;while true do if (v416==0) then v318=v318 + 1 ;v121[v414]=v316[v318];break;end end break;end end end break;end if (v314==0) then v315=v123[3 -1 ];v316,v317=v114(v121[v315](v21(v121,v315 + 1 ,v116)));v314=1;end if (v314==1) then v116=(v317 + v315) -1 ;v318=14 -(9 + 5) ;v314=2;end end else v115=v123[3];end elseif (v124<=(427 -(85 + 291))) then if (v124<=48) then if (v124==47) then local v234=0;local v235;while true do if (v234==0) then v235=v123[2];v121[v235]=v121[v235](v21(v121,v235 + (1266 -(243 + 1022)) ,v116));break;end end else local v236=0;local v237;local v238;while true do if (v236==1) then while true do if (v237==0) then v238=v123[2 + 0 ];v121[v238]=v121[v238](v21(v121,v238 + 1 ,v116));break;end end break;end if (v236==0) then v237=0;v238=nil;v236=1;end end end elseif (v124<=49) then local v239=0;local v240;local v241;while true do if (v239==1) then while true do if (v240==0) then v241=v123[7 -5 ];do return v121[v241](v21(v121,v241 + (998 -(915 + 82)) ,v123[8 -5 ]));end break;end end break;end if (v239==0) then v240=0;v241=nil;v239=1;end end elseif (v124>50) then if (v123[2 + 0 ]==v121[v123[4]]) then v115=v115 + 1 + 0 ;else v115=v123[3];end else v121[v123[2]]=v121[v123[3]][v123[1184 -(1123 + 57) ]];end elseif (v124<=53) then if (v124==52) then local v242=0;local v243;while true do if (v242==0) then v243=v123[2];v121[v243]=v121[v243](v21(v121,v243 + 1 + 0 ,v123[3]));break;end end else v121[v123[2]]=v82[v123[3]];end elseif (v124<=54) then v121[v123[2]]=v123[3];elseif (v124>55) then local v322=0;local v323;while true do if (v322==0) then v323=v123[2 -0 ];do return v21(v121,v323,v116);end break;end end else local v324=0;local v325;local v326;local v327;local v328;while true do if (v324==0) then v325=0;v326=nil;v324=1;end if (v324==1) then v327=nil;v328=nil;v324=2;end if (v324==2) then while true do if (v325==0) then local v454=0;while true do if (v454==1) then v325=1;break;end if (v454==0) then v326=v123[2];v327=v121[v326];v454=1;end end end if (v325==1) then v328=v121[v326 + 2 ];if (v328>(1930 -(1869 + 61))) then if (v327>v121[v326 + (1188 -(1069 + 118)) ]) then v115=v123[3];else v121[v326 + 3 ]=v327;end elseif (v327<v121[v326 + 1 + 0 ]) then v115=v123[3];else v121[v326 + 3 ]=v327;end break;end end break;end end end elseif (v124<=66) then if (v124<=61) then if (v124<=(131 -73)) then if (v124>57) then local v248=0;local v249;local v250;local v251;local v252;while true do if (v248==1) then v251=nil;v252=nil;v248=2;end if (v248==0) then v249=0;v250=nil;v248=1;end if (2==v248) then while true do if (v249==1) then v252=v121[v250 + 2 ];if (v252>0) then if (v251>v121[v250 + 1 ]) then v115=v123[3];else v121[v250 + (10 -7) ]=v251;end elseif (v251<v121[v250 + 1 ]) then v115=v123[6 -3 ];else v121[v250 + 3 ]=v251;end break;end if (0==v249) then local v421=0;while true do if (v421==0) then v250=v123[2];v251=v121[v250];v421=1;end if (v421==1) then v249=1;break;end end end end break;end end else local v253=0;local v254;local v255;while true do if (v253==0) then v254=0;v255=nil;v253=1;end if (v253==1) then while true do if (v254==0) then v255=v123[2];v121[v255]=v121[v255](v121[v255 + 1 ]);break;end end break;end end end elseif (v124<=59) then local v256=0;local v257;local v258;local v259;local v260;local v261;while true do if (v256==2) then v261=nil;while true do if (1==v257) then local v424=0;while true do if (1==v424) then v257=2;break;end if (v424==0) then v116=(v260 + v258) -1 ;v261=0;v424=1;end end end if (v257==2) then for v444=v258,v116 do local v445=0;while true do if (v445==0) then v261=v261 + 1 + 0 ;v121[v444]=v259[v261];break;end end end break;end if (v257==0) then local v425=0;while true do if (v425==0) then v258=v123[2];v259,v260=v114(v121[v258](v21(v121,v258 + 1 ,v123[3])));v425=1;end if (v425==1) then v257=1;break;end end end end break;end if (1==v256) then v259=nil;v260=nil;v256=2;end if (0==v256) then v257=0;v258=nil;v256=1;end end elseif (v124==60) then v121[v123[2 -0 ]][v121[v123[3]]]=v123[4];elseif v121[v123[2]] then v115=v115 + 1 + 0 ;else v115=v123[3];end elseif (v124<=(85 -22)) then if (v124==62) then local v262=0;local v263;local v264;local v265;local v266;local v267;while true do if (v262==0) then v263=0;v264=nil;v262=1;end if (v262==1) then v265=nil;v266=nil;v262=2;end if (v262==2) then v267=nil;while true do if (v263==2) then for v446=v264,v116 do local v447=0;local v448;while true do if (v447==0) then v448=0;while true do if (v448==0) then v267=v267 + 1 ;v121[v446]=v265[v267];break;end end break;end end end break;end if (v263==1) then local v426=0;while true do if (v426==1) then v263=2;break;end if (v426==0) then v116=(v266 + v264) -1 ;v267=0 -0 ;v426=1;end end end if (v263==0) then local v427=0;while true do if (v427==0) then v264=v123[2];v265,v266=v114(v121[v264](v21(v121,v264 + 1 ,v116)));v427=1;end if (v427==1) then v263=1;break;end end end end break;end end elseif (v123[2]==v121[v123[4]]) then v115=v115 + 1 ;else v115=v123[3];end elseif (v124<=(61 + 3)) then local v268=0;local v269;local v270;local v271;local v272;local v273;while true do if (v268==2) then v273=nil;while true do if (1==v269) then local v428=0;while true do if (v428==0) then v116=(v272 + v270) -1 ;v273=1474 -(1329 + 145) ;v428=1;end if (v428==1) then v269=2;break;end end end if (v269==2) then for v449=v270,v116 do local v450=0;while true do if (v450==0) then v273=v273 + (792 -(368 + 423)) ;v121[v449]=v271[v273];break;end end end break;end if (v269==0) then local v429=0;while true do if (v429==1) then v269=1;break;end if (0==v429) then v270=v123[2 + 0 ];v271,v272=v114(v121[v270](v21(v121,v270 + 1 ,v123[3])));v429=1;end end end end break;end if (v268==1) then v271=nil;v272=nil;v268=2;end if (v268==0) then v269=0;v270=nil;v268=1;end end elseif (v124==65) then v121[v123[2]]=v121[v123[3]]%v123[4] ;else v121[v123[2]]=v121[v123[3]] -v123[4] ;end elseif (v124<=(223 -152)) then if (v124<=68) then if (v124>67) then if (v121[v123[2]]==v123[4]) then v115=v115 + 1 ;else v115=v123[3];end else v121[v123[973 -(140 + 831) ]]=v121[v123[3]];end elseif (v124<=(1919 -(1409 + 441))) then v121[v123[2]]=v121[v123[3]];elseif (v124==70) then v121[v123[2]]=v123[3] + v121[v123[4]] ;else for v359=v123[20 -(10 + 8) ],v123[3] do v121[v359]=nil;end end elseif (v124<=73) then if (v124>72) then v121[v123[2]]=v82[v123[3]];else v121[v123[7 -5 ]]=v121[v123[3]]%v121[v123[4]] ;end elseif (v124<=74) then v121[v123[444 -(416 + 26) ]][v123[3]]=v123[4];elseif (v124>75) then do return;end else v121[v123[2]]=v121[v123[3]] -v123[4] ;end v115=v115 + 1 ;break;end end end break;end if (v110==2) then v119=v20("#",...) -1 ;v120={};v121={};for v130=0,v119 do if (v130>=v113) then v117[v130-v113 ]=v118[v130 + 1 ];else v121[v130]=v118[v130 + 1 ];end end v110=3;end end end;end if (0==v84) then v85=v81[2 -1 ];v86=v81[2];v84=1;end end end return v43(v42(),{},v29)(...);end end end if (v31==2) then local v51=0;while true do if (v51==1) then function v36()local v88=0;local v89;local v90;while true do if (v88==0) then v89,v90=v9(v28,v32,v32 + 2 );v32=v32 + 2 ;v88=1;end if (v88==1) then return (v90 * 256) + v89 ;end end end v31=3;break;end if (v51==0) then function v35()local v91=0;local v92;local v93;while true do if (v91==1) then while true do local v125=0;while true do if (v125==0) then if (v92==1) then return v93;end if (v92==(0 -0)) then local v136=0;while true do if (v136==0) then v93=v9(v28,v32,v32);v32=v32 + 1 + 0 ;v136=1;end if (v136==1) then v92=1;break;end end end break;end end end break;end if (v91==0) then v92=1445 -(1290 + 155) ;v93=nil;v91=1;end end end v36=nil;v51=1;end end end v45=1;end if (v45==1) then if (5==v31) then local v52=0;while true do if (v52==1) then function v41(...)return {...},v20("#",...);end v31=6;break;end if (v52==0) then v40=v37;v41=nil;v52=1;end end end if (v31==0) then local v53=0;while true do if (v53==1) then v28=v12(v11(v28,5),v7("\156\244","\178\218\237\200"),function(v94)if (v9(v94,2)==(246 -167)) then local v99=0;local v100;while true do if (v99==0) then v100=0;while true do if (v100==0) then local v131=0;while true do if (0==v131) then v33=v8(v11(v94,1,1 + 0 ));return "";end end end end break;end end else local v101=0;local v102;local v103;while true do if (v101==0) then v102=0;v103=nil;v101=1;end if (1==v101) then while true do if (v102==0) then v103=v10(v8(v94,16));if v33 then local v141=0;local v142;while true do if (v141==0) then v142=v13(v103,v33);v33=nil;v141=1;end if (v141==1) then return v142;end end else return v103;end break;end end break;end end end end);v31=1;break;end if (v53==0) then v32=1;v33=nil;v53=1;end end end v45=2;end end end break;end end end vv17(),...);end
